analyze the 2015, 2016, and 2017 World Happiness Reports.
answer the following question:
Did world happiness increase, decrease, or stay about the same from 2015 to 2017?
each country a happiness score based on a poll question that asks respondents to rank their life on a scale of 0 - 10, 
so "world happiness" refers to this definition specifically.

1. We've already read the World_Happiness_2015.csv file into a dataframe called happiness2015.
Use the pandas.read_csv() function to read the World_Happiness_2016.csv file into a dataframe 
called happiness2016 and the World_Happiness_2017.csv file into a dataframe called happiness2017.
Add a column called Year to each dataframe with the corresponding year. For example, the Year column 
in happiness2015 should contain the value 2015 for each row.
https://www.geeksforgeeks.org/adding-new-column-to-existing-dataframe-in-pandas/
https://www.geeksforgeeks.org/python-pandas-dataframe-assign/

import pandas as pd
happiness2015 = pd.read_csv("World_Happiness_2015.csv")
happiness2016 = pd.read_csv("World_Happiness_2016.csv")
happiness2017 = pd.read_csv("World_Happiness_2017.csv")
happiness2015['Year'] = 2015
happiness2016['Year'] = 2016
happiness2017['Year'] = 2017


2. pd.concat()
Let's start by exploring the pd.concat() function. The concat() function combines dataframes one of two ways:
                            side by side axis = 1 == df1 df2 df3 

stacked axis = o  
df1 
df2
df3

pd.concat([df1,df2])

Below are the subsets we'll be working with:
head_2015 = happiness2015[['Country','Happiness Score', 'Year']].head(3)
head_2016 = happiness2016[['Country', 'Happiness Score','Year']].head(3)

We've already saved the subsets from happiness2015 and happiness2016 to the variables head_2015 and head_2016.
Use the pd.concat() function to combine head_2015 and head_2016 along axis = 0. Remember to pass the head_2015 and head_2016 into the function as a list. Assign the result to concat_axis0.
Use the pd.concat() function to combine head_2015 and head_2016 along axis = 1. Remember to pass head_2015 and head_2016 into the function as a list and set the axis parameter equal to 1. Assign the result to concat_axis1.
Use the variable inspector to view concat_axis0 and concat_axis1.
Assign the number of rows in concat_axis0 to a variable called question1.
Assign the number of rows in concat_axis1 to a variable called question2.

head_2015 = happiness2015[['Country','Happiness Score', 'Year']].head(3)
head_2016 = happiness2016[['Country','Happiness Score', 'Year']].head(3)
concat_axis0 = pd.concat([head_2015,head_2016],axis = 0)

concat_axis1 =pd.concat([head_2015,head_2016],axis = 1)

question1 = concat_axis0.shape[0]

question2 = concat_axis1.shape[0]

https://i.stack.imgur.com/3FXuI.png -- DataFrame.count(self, axis=0, level=None, numeric_only=False)[source]
row counts len(df),df.shape[0],len(df.index)
column counts len(def.columns), df.shape[1]
group count- df.count, df.sixe

3. 

